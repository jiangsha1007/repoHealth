# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-09-28 06:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('github', '0010_auto_20180927_0935'),
    ]

    operations = [
        migrations.CreateModel(
            name='Repo_Commit_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commit_file_count', models.IntegerField(default=0)),
                ('commit_file_per', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Repo_Issue_Comment_info',
            fields=[
                ('issue_comment_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('issue_comment_author_association', models.CharField(max_length=100)),
                ('issue_comment_created_at', models.CharField(max_length=100)),
                ('issue_comment_body', models.TextField(blank=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Repo_milestones_info',
            fields=[
                ('milestones_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('milestones_title', models.CharField(max_length=255)),
                ('milestones_state', models.IntegerField(default=0)),
                ('milestones_create_time', models.CharField(max_length=100)),
                ('milestones_close_time', models.CharField(max_length=100)),
                ('milestones_update_time', models.CharField(max_length=100)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Repo_Pulls_info',
            fields=[
                ('pull_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('pull_number', models.IntegerField(default=0)),
                ('pull_state', models.IntegerField(default=0)),
                ('pull_author_association', models.CharField(max_length=100)),
                ('pull_created_at', models.CharField(max_length=100)),
                ('pull_update_at', models.CharField(max_length=100)),
                ('pull_closed_at', models.CharField(max_length=100)),
                ('pull_merged_at', models.CharField(max_length=100)),
                ('pull_is_merged', models.IntegerField(default=0)),
                ('pull_commit_count', models.IntegerField(default=0)),
                ('pull_add_count', models.IntegerField(default=0)),
                ('pull_del_count', models.IntegerField(default=0)),
                ('pull_changed_files', models.IntegerField(default=0)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='repo_issue_info',
            name='id',
        ),
        migrations.AddField(
            model_name='repo_issue_info',
            name='issue_comment_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='repo_issue_info',
            name='issue_id',
            field=models.IntegerField(default=0, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='repo_issue_info',
            name='issue_number',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user_org_info',
            name='branches_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user_org_info',
            name='pulls_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='repo_pulls_info',
            name='pull_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='github.User_Org_Info'),
        ),
        migrations.AddField(
            model_name='repo_pulls_info',
            name='repo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='github.Repo_Base_Info'),
        ),
        migrations.AddField(
            model_name='repo_milestones_info',
            name='milestones_creater',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='github.User_Org_Info'),
        ),
        migrations.AddField(
            model_name='repo_milestones_info',
            name='repo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='github.Repo_Base_Info'),
        ),
        migrations.AddField(
            model_name='repo_issue_comment_info',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='github.Repo_Issue_info'),
        ),
        migrations.AddField(
            model_name='repo_issue_comment_info',
            name='issue_comment_author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='github.User_Org_Info'),
        ),
        migrations.AddField(
            model_name='repo_issue_comment_info',
            name='repo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='github.Repo_Base_Info'),
        ),
        migrations.AddField(
            model_name='repo_commit_info',
            name='commit_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='github.User_Org_Info'),
        ),
        migrations.AddField(
            model_name='repo_commit_info',
            name='committer_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committer_user', to='github.User_Org_Info'),
        ),
        migrations.AddField(
            model_name='repo_commit_info',
            name='repo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='github.Repo_Base_Info'),
        ),
    ]
